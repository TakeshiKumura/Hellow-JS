# -*- coding: utf-8 -*-
"""MYCOEIROINK作成コード_ベータ版_v.0.4.15.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BqaB-Zv5RuaQp-OW0effsFVGCYwvaJ4R

# **利用規約**
"""



"""- これはCOEIROINK用の音声合成モデルを作るためのコードです。以下「このコードで作成されたCOEIROINK用の音声合成モデル」を「MYCOEIROINK」と表現します。また、コードを実行した時点で、利用規約に同意したものとします。

## MYCOEIROINK作成に関して

- 「自分の声」以外で作ることは原則禁止です
- もし、他者の声で作成する場合は、「COEIROINKでの合成音声化に許諾していること」が作成条件となります
- 他者の声で作成する場合は、原則「ITAコーパス、MANAコーパス」での作成をお願いします。（原則というのは、コーパス文を読んでいただいているくらい、音声提供者の明確な許諾が必要ということです）
- MYCOEIROINKをCOEIROINK以外のアプリケーションで動作させることは禁止です
  - （COEIROINK起動時のローカルAPIを利用して、別のソフトウェアと組み合わせることは許容しています）
- 配布せずに、自身のみでMYCOEIROINKの音声を使用する場合も、その音声を第三者に公開する際は「[COEIROINKの禁止事項](https://coeiroink.com/terms)」を守り、「クレジット表記」をする必要があります。
  - クレジット表記例） 「COEIROINK:合成音声名」

### 禁止の例

- アニメやゲーム、YouTube・ニコニコ動画などの動画サイトから、明確な許諾なしの他者の音声を用いて、MYCOEIROINKを作る行為
- COEIROINKに使われることを想定せずに配布された音声データでMYCOEIROINKを作る行為

## MYCOEIROINK配布に関して

- 配布するMYCOEIROINKに以下の利用規約を必ず入れてください
  - [COEIROINKの禁止事項](https://coeiroink.com/terms)（リンクを張ってください）
  - 生成された音声を使用する際には**クレジット表記必須**であること
    - 「COEIROINK」と「合成音声名」が含まれるクレジットが必須です
    - 例） 「COEIROINK:合成音声名」
- その他の利用規約は自由に設定可能です。[COEIROINKのサイト](https://coeiroink.com/character/audio-character/tsukuyomi-chan)を参考に適宜設定してください。
- MYCOEIROINKの**有料配布**は禁止です
  - MYCOEIROINK無償配布しながら、開発支援などで収益を受け取ることは問題ありません。
  - MYCOEIROINKの紹介・配布動画を収益化したり、MYCOEIROINKをニコニ・コモンズに登録し、収益化することは問題ありません。
  - MYCOEIROINKの限定配布自体は問題ありませんが、MYCOEIROINK配布者が管理する有料商品を購入した方限定のような配布は、有料配布にあたる可能性があります。
- MYCOEIROINKを機械学習用の事前学習モデルとして配布するのは禁止です

## MYCOEIROINK配布の危険性に関して

MYCOEIROINKには、以下の危険性があります。その危険性を理解した上で配布を行ってください。

- 利用規約を守らずに使用をされる危険性
  - 例） ディープフェイクなどのなりすましに使われる

MYCOEIROINK配布によって、いかなる不利益が生じたとしても、運営者は一切責任を負いません。免責事項をご確認ください。

## コードに関して

- コードの改変の有無に関わらず、このコードを再配布する行為は禁止です
- コードを改変して利用した場合、その合成音声モデルはMYCOEIROINKとみなされない可能性があります
  - このコード内でCOEIROINK提供でない事前学習モデルを使う行為は禁止です（「**自身**で作成したMYCOEIROINKを事前学習モデルに使うことは例外的に許可しています。」）

## COEIROINKに関して

- COEIROINKソフトウェア上で、「COEIROINK提供の合成音声、または、MYCOEIROINK」以外の合成音声を利用する行為は禁止です

# **免責事項**

- MYCOEIROINK、および、このコードを使用すること、または使用できなかったことによって、いかなる不利益が生じたとしても、運営者は一切責任を負いません
- 当サイトに掲載されている情報の正確性・最新性について、運営者は一切責任を負いません
- ユーザー間、またはユーザーと第三者の間に生じたトラブルについては、当事者間で解決を図っていただくものとし、運営者は一切関知いたしません

# **提供について**

- サービスの継続やアップデートについての決定権はこのページの管理者にあります
- 不具合があったとしても、管理者は対応する義務を負わないものとします
- サービスの内容は予告なく変更されることがあります
- サービスは予告なく終了することがあります
- コードの著作権は運営者に帰属します
- 本規約に反する行為がある場合には、本コードを利用したコンテンツを停止していただく場合があります

# **作成に関して**

## MYCOEIROINKの作成と利用に必要なもの

- COEIROINK（v.1.1.0以上）
  - あらかじめ、自身のPCでCOEIROINKが動作するか確認しておいてください
- Googleアカウント、および、Google Driveの空き容量
  - 最大 **7GB** 程度要します
- 読み上げ音声wav（最小10文、最大652文で作成可能です）
  - ITAコーパス（424文）
    - [emotion](https://github.com/mmorise/ita-corpus/blob/main/emotion_%E6%9C%97%E8%AA%AD%E8%80%85%E7%94%A8.pdf)
    - [recitation](https://github.com/mmorise/ita-corpus/blob/main/recitation_transcript_utf8.txt)
  - MANAコーパス（228文）
   - [mana](https://github.com/shirowanisan/coeiroink-corpus-manager/blob/main/mana-corpus/mana-corpus.pdf)
  - wavの推奨設定
    - 44.1kHz
    - 16bit
    - モノラル

# 文章の読み上げ時の注意点

- 「。」「、」の位置はポーズ、「、」がない部分は続けて読む想定となります。こちらを正しく読み上げないと「、」のない位置で停止してしまうMYCOEIROINKになってしまいます。

- MYCOEIROINKでは「・」はポーズとして扱っていません。「・」はないものとして読み上げてください。

- アニメのように感情を込めて、抑揚を大きくつけた読み上げは、モデルになったときに安定しない可能性があります。できるだけ1つの感情で読み上げた方が、モデルになったときに安定する傾向にあります。「朗読」を意識した読み上げは安定したモデルになりますが、キャラクターにアテレコしたときに棒読みのように感じてしまうことも多いです。「自然に話す」を意識することで、モデルになったときに安定し、キャラクターのアテレコに向いている可能性があります。

- 「テャ、テュ、テョ」は「テヨ（t-e y-o）」ではなく「テョ（ty-o）」となります。ちなみにこちらは「チョ（ch-o）」とは違う音になります。音が気になる方は[あみたろさんのITAコーパス読み上げ音声のダウンロード](https://amitaro.net/voice/ita/)をご参照ください。

- 「そうですか」を「そうですかー」というように、文末を常にのばして読んでしまうと、モデルに反映され、文末の生成に違和感のあるモデルになる可能性があります。

- 疑問文を追加した際に、意図していない文章で語尾が上がってしまう可能性があります。MANAコーパスの疑問文を全て用いる際は、ITAコーパスも全て用いることが推奨です。

- 疑問文を読むときに「そうですか？」が「そうですかぁ？」「そうですかー？」というように大袈裟に丁寧に伸ばして疑問符化すると、そのあたりも再現され、MYCOEIROINKになったときに少し違和感が出る可能性があります。急に文末を止めても違和感が出てしまい、適切な文末は難しいですが、「そうですかー？」と大袈裟に伸ばさずに、普段の会話のイメージで「そうですか？」と疑問文にした方が安定する可能性が高そうです。

- これは開発者が個人的に感じた現状のMYCOEIROINKの傾向であり、全ての音声合成技術に上記の音声データが良いとは限りませんので、ご注意ください。

## 自分の音声を録る前に作成を試してみたい

声素材屋さんの[あみたろさん](https://twitter.com/amitaro_utau) が、MYCOEIROINKの学習テストにも使えるITAコーパスを公開してくださっています。
とりあえず録音をする前に作成を試してみたい方は、あみたろさんのITAコーパスで試してみてはいかがでしょうか。

- [あみたろさんのITAコーパス読み上げ音声のダウンロード](https://amitaro.net/voice/ita/)
- MYCOEIROINKの学習に使用する場合は「ITAcorpus_amitaro_forMYCOEIROINK 2.2.zip」(44.1kHz)をダウンロードしてください。
- こちらの音声データで作成したMYCOEIROINKは、あみたろさんのITAコーパスの利用規約にも従ってください。

## Google colabに関して

- このコードはGoogleのクラウド環境で実行するため、あなたのPCのスペックは関係なく、負荷もかかりません
- Google colabはセッションが切れると初期状態になります。初期状態になった場合は、あなたのGoogle Driveに保存しているもの以外はなくなり、コードも再度最初から実行する必要があります
- Google colab実行中はブラウザを閉じたり、PCがスリープ状態になると、セッションが切れ、初期状態に戻る可能性があります
- もし、セッションがMYCOEIROINK作成の途中で切れた場合は、再度最初からやり直しになります
- Google colabでは長時間連続で使用すると、使用制限がかかることがあります。その場合は時間を置いて、使用制限が解除されてから、実行してください
- Google colabのアップデートの影響を受けて、このコードは動かなくなる可能性があります。

## 作成時間に関して

このコードを実行したあと、音声合成モデルの作成には12時間程度、ブラウザを開けた状態で放置する必要があります。

## 効率的な学習に関して

GoogleColabでの効率的な学習方法に関して、有志の方が書かれた記事を紹介します。

[MYCOEIROINKの学習についての備忘録](https://privatter.net/p/10337479)（執筆者: [しゅがもあさん](https://twitter.com/SUGAmoremusic)）

2024年2月ごろからGoogleColabに課金を行わないと、学習が進みにくい状態となっております。NvidiaのGPUを搭載したPCを所有している場合は、自身のPCで学習を行った方が、効率良く学習できる可能性があります。有志の方が書かれたローカルでの学習方法の記事を紹介します。

[MYCOEIROINK作成を自前PCのGPUで行う方法(WINDOWS限定)](https://note.com/hakuti892/n/nac2c8846b9ee?sub_rt=share_pw)（執筆者: [白痴ーさん](https://twitter.com/hakuti892)）

========================================================

# **上記の規約を確認しましたか？**

以下から、MYCOEIROINKの作成パートです。実行した時点で規約に同意したものとなります。

========================================================

# 事前準備

音声モデル作成のためにGPUを使用する設定をしてください

上のバーから「ランタイム > ランタイムのタイプを変更」を選択します。

次に「ハードウェア アクセラレータ」を「GPU」に変更して「保存」を選択します。

<img src="https://drive.google.com/uc?export=view&id=1cVcT3Rh15Xl2YnXThIZ2d6mJ546jqRZ6" border="5" width=80%>

<img src="https://drive.google.com/uc?export=view&id=1cZEyn-RCkrEQom9fF-UQ7jEGgd5t3ykd" border="5" width=20%>

# Googleドライブのマウント

**注意点1**

```
このコードで「あなたのGoogle Drive」に接続します。
これにより、このコードは「あなたのGoogle Driveのファイルにアクセスできるようになります」
MYCOEIROINKのコードの実行結果は、あなたのGoogle Driveの「MYCOEIROINK_WORK」フォルダに保存されます。
MYCOEIROINKのコードは「MYCOEIROINK_WORK」フォルダ以外にはアクセスしないように設計しているつもりですが、
もし「あなたのGoogle Driveのフォルダに影響を及ぼしたとしても責任はとれません（免責事項参照）」。
それをご理解の上、実行お願いします。
より、安全に実行したい場合は、Google Driveが空の状態で実行することをオススメします。
また、MYCOEIROINKのなりすましコードにもお気をつけください。ちゃんとCOEIROINKのホームページ（coeiroink.com）からアクセスして、このコードを実行するようにしてください。
```

**注意点2**

Google Driveの空き容量は「**7GB**」程度必要です。

**手順**

<img src="https://drive.google.com/uc?export=view&id=1aTEXrqYVYLo2C-TJqyXqhv7XbUACrgpG" border="5" width=80%>

<img src="https://drive.google.com/uc?export=view&id=1tFJ4iiWl4vYE0Gdev4gPk8rmYZy7GrVV" border="5" width=20%>
"""

#@title 「Googleドライブのマウント」のために左の再生ボタンをおしてください
from google.colab import drive
drive.mount('/content/drive')

"""# 必要なデータのダウンロード

**ここでエラーになる場合**

MYCOEIROINKの利用者が多い場合、Driveのダウンロード制限により、必要なデータがダウンロードできなくなっている可能性があります。時間を空けてお試しください。
"""

#@title 「必要なデータのダウンロード」のために左の再生ボタンをおしてください
import os

downloads_path = '/content/drive/MyDrive/MYCOEIROINK_WORK/downloads'
os.makedirs(downloads_path, exist_ok=True)

dummy_speaker_info_path = downloads_path + '/dummy_speaker_info_2.zip'
mycoe_pretrain_model_path = downloads_path + '/mycoe_pretrain_model.zip'
mycoe_pretrain_model_path_2 = downloads_path + '/mycoe_pretrain_model_2.zip'
mycoe_pretrain_model_path_3 = downloads_path + '/mycoe_pretrain_model_3.zip'

if not os.path.exists(dummy_speaker_info_path):
  !wget 'https://www.dropbox.com/scl/fi/1rklec40ro74lbr0udgcr/dummy_speaker_info_2.zip?rlkey=dr984tgbbw8ur26rgkagc3kc1&dl=1' -O '/content/drive/MyDrive/MYCOEIROINK_WORK/downloads/dummy_speaker_info_2.zip'

if not os.path.exists(mycoe_pretrain_model_path):
  !wget 'https://www.dropbox.com/s/uph2t4e19t4bvr9/mycoe_pretrain_model.zip?dl=1' -O '/content/drive/MyDrive/MYCOEIROINK_WORK/downloads/mycoe_pretrain_model.zip'

if not os.path.exists(mycoe_pretrain_model_path_2):
  !wget 'https://www.dropbox.com/s/fkv8hvt1y82hsh6/mycoe_pretrain_model_2.zip?dl=1' -O '/content/drive/MyDrive/MYCOEIROINK_WORK/downloads/mycoe_pretrain_model_2.zip'

if not os.path.exists(mycoe_pretrain_model_path_3):
  !wget 'https://www.dropbox.com/s/vq9cfizgufdxvry/mycoe_pretrain_model_3.zip?dl=1' -O '/content/drive/MyDrive/MYCOEIROINK_WORK/downloads/mycoe_pretrain_model_3.zip'

if not os.path.exists(dummy_speaker_info_path) or not os.path.exists(mycoe_pretrain_model_path) or not os.path.exists(mycoe_pretrain_model_path_2) or not os.path.exists(mycoe_pretrain_model_path_3):
  raise Exception('MYCOEIROINKの利用者多い場合、Driveのダウンロード制限により、必要なデータがダウンロードできなくなっている可能性があります。時間を空けてお試しください。')

"""# あなたの音声データzipを入れるためのフォルダを作成

このコードを実行すると、あなたのGoogle Driveに以下のフォルダが作成されます。

<img src="https://drive.google.com/uc?export=view&id=1Vso8bKI8PiMGINOjbtyzttZfhmHqtC-g" border="5" width=80%>
"""

#@title 「あなたの音声データzipを入れるためのフォルダを作成」のために左の再生ボタンをおしてください
import os
os.makedirs('/content/drive/MyDrive/MYCOEIROINK_WORK/あなたの音声データzipを入れてください', exist_ok=True)

"""# あなたの読み上げ音声をzip化してGoogle Driveにあげてください

以下のように読み上げ音声をGoogle Driveに上げてください。

<img src="https://drive.google.com/uc?export=view&id=1Awazepkqjmpw1obLfzWkKi_eF50dGNH2" border="5" width=80%>

zipを解凍したときのファイル名は以下のようにしてください。

<img src="https://drive.google.com/uc?export=view&id=1N5j1-WBa58Ar9cdDb9ayawFRQTJsZn6M" border="5" width=30%>

# zip内の内容確認

読み上げ音声のzipファイルの中でwavが存在する分だけ学習に用います。最小10音声から作成可能です。

ここであなたがアップロードしたzipの内容を確認します。zipの中身に問題がある場合はここでエラーになります。

音声zipを上げてすぐだと、認識できておらずエラーになる可能性があります。

44.1kHz以外の音声は44.1kHzに変換して利用されます。
"""

#@title 「zip内の内容確認」のために左の再生ボタンをおしてください
import glob
import shutil
import os
import soundfile as sf

colab_workspace = '/content/tmp'

if os.path.exists(colab_workspace):
  shutil.rmtree(colab_workspace)
os.makedirs(colab_workspace, exist_ok=True)

zip_folder = '/content/drive/MyDrive/MYCOEIROINK_WORK/あなたの音声データzipを入れてください'
if len(glob.glob(zip_folder + '/*.zip')) == 0:
  raise Exception(f"zipが見つかりません。")
zip_path = glob.glob(zip_folder + '/*.zip')[0]
workspace_zip_path = colab_workspace + '/wavs.zip'
wavs_folder = colab_workspace + '/wavs'
shutil.copyfile(zip_path, workspace_zip_path)
shutil.unpack_archive(workspace_zip_path, wavs_folder)

wav_paths = sorted(glob.glob(wavs_folder + '/**/*.wav', recursive=True))
wav_names = [wav_path.split('/')[-1].replace('.wav', '') for wav_path in wav_paths]

!git clone https://github.com/shirowanisan/coeiroink-corpus-manager.git
with open('/content/coeiroink-corpus-manager/marged-corpus.txt', encoding='utf-8') as f:
  text = f.readlines()
ita_corpus_keys = [s.split(':')[0] for s in text]
ita_corpus_values = [s.split(':')[-1] for s in text]
ita_corpus_dict = dict(zip(ita_corpus_keys, ita_corpus_values))

for wav_name in wav_names:
  if wav_name not in ita_corpus_keys:
    raise Exception(f"「{wav_name}」というwavファイルが含まれており、このファイル名はMYCOEIROINK対象のコーパスに含まれていません。")

if len(wav_names) < 10:
  raise Exception(f"wavファイルの数が「{len(wav_names)}」ですが、wavファイルは10以上必要です。")

incorrect_fs_flag = False
incorrect_fs_list = []
for wav_path in wav_paths:
  wav, original_fs = sf.read(wav_path)
  if len(wav.shape) == 2:
    raise Exception(f"「{wav_path.split('/')[-1]}」が、ステレオの可能性があります。モノラルにしてください。")
  if original_fs != 44100:
    incorrect_fs_list.append(wav_path.split('/')[-1])
    incorrect_fs_flag = True
if incorrect_fs_flag:
  print("WARNING: 44.1kHz以外の音声が含まれています。MYCOEでは44.1kHz以外の音声は44.1kHzに変換して利用されます。")
  print(incorrect_fs_list)

"""# 音声の前処理

こちらの処理の最後に、今回の学習で使われる音声の数が表示されますので、間違いがないかご確認ください。
"""

#@title 音声の開始終了の無音区間を自動で削除する場合は「ON」にしてください。（開始終了の無音区間がない方が、音声生成の速度が速くなる傾向にあります。）

trim_flag = 'ON' #@param ["ON", "OFF"] {type: "string"}

#@title 「音声の前処理」のために左の再生ボタンをおしてください
import soundfile as sf
import librosa
from librosa.util import normalize

MAX_WAV_VALUE = 32768.0
sampling_fs = 44100

normalized_wavs_path = '/content/normalized_wavs'
if os.path.exists(normalized_wavs_path):
  shutil.rmtree(normalized_wavs_path)
os.makedirs(normalized_wavs_path, exist_ok=True)

text = ''
# wavのサンプリング周波数と音量の調整とテキストの作成
for wav_path in wav_paths:
  wav_name = wav_path.split('/')[-1].replace('.wav', '')
  text += wav_name + ':' + ita_corpus_dict[wav_name]
  wav, original_fs = sf.read(wav_path)
  if original_fs != sampling_fs:
    wav = librosa.resample(wav, orig_sr=original_fs, target_sr=sampling_fs)
  if trim_flag == "ON":
    index = librosa.effects.trim(wav, top_db=30)[1]
    start = index[0] - int(sampling_fs * 0.10) if index[0] - int(sampling_fs * 0.10) > 0 else 0
    end = index[1] + int(sampling_fs * 0.10) if index[1] + int(sampling_fs * 0.10) < len(wav) else len(wav)
    wav = wav[start:end]
  normalized_wav = normalize(wav) * 0.90
  sf.write(normalized_wavs_path + '/' + wav_path.split('/')[-1], normalized_wav, sampling_fs, 'PCM_16')

corpus_path = '/content/corpus'
if os.path.exists(corpus_path):
  shutil.rmtree(corpus_path)
os.makedirs(corpus_path, exist_ok=True)

with open('/content/corpus/transcripts_utf8.txt', 'w', encoding='UTF-8') as f:
  f.write(text)

print(f"今回の学習に使われる音声の数は全部で「{len(wav_paths)}」個となっています。ご確認ください。")

"""#Speaker_infoフォルダの作成

このコードを実行することで、Google Driveに「speaker_info」フォルダが作成されれます。
こちらのフォルダはMYCOEIROINK配布時に使います。

<img src="https://drive.google.com/uc?export=view&id=1ikASBxoneN0lT9wOo7VG3_fBdvtqcpEq" border="5" width=80%>
"""

# Commented out IPython magic to ensure Python compatibility.
#@title 「Speaker_infoフォルダの作成」のために左の再生ボタンをおしてください
# %cd /content/
!unzip /content/drive/MyDrive/MYCOEIROINK_WORK/downloads/dummy_speaker_info_2.zip

import glob
import uuid
import random
import shutil
import json
import os

speaker_info_contents = sorted(glob.glob('/content/drive/MyDrive/MYCOEIROINK_WORK/speaker_info/*'))
if len(speaker_info_contents) == 0:
  speaker_uuid = str(uuid.uuid1())
  speaker_id = random.randint(10001, 2147483647)

  shutil.move('/content/dummy_speaker_info/icons/<speaker_id>.png', f"/content/dummy_speaker_info/icons/{speaker_id}.png")
  shutil.move('/content/dummy_speaker_info/voice_samples/<speaker_id>_001.wav', f"/content/dummy_speaker_info/voice_samples/{speaker_id}_001.wav")
  shutil.move('/content/dummy_speaker_info/voice_samples/<speaker_id>_002.wav', f"/content/dummy_speaker_info/voice_samples/{speaker_id}_002.wav")
  shutil.move('/content/dummy_speaker_info/voice_samples/<speaker_id>_003.wav', f"/content/dummy_speaker_info/voice_samples/{speaker_id}_003.wav")
  shutil.move('/content/dummy_speaker_info/model/<speaker_id>', f"/content/dummy_speaker_info/model/{speaker_id}")

  metas = {
      "speakerName": "MYCOEIROINK",
      "speakerUuid": speaker_uuid,
      "styles": [
          {
              "styleName": "のーまる",
              "styleId": speaker_id
          }
      ]
  }

  with open('dummy_speaker_info/metas.json', mode='w', encoding='utf-8') as f:
    json.dump(metas, f, indent=4, ensure_ascii=False)

  os.makedirs('/content/drive/MyDrive/MYCOEIROINK_WORK/speaker_info', exist_ok=True)
  shutil.copytree('/content/dummy_speaker_info', f"/content/drive/MyDrive/MYCOEIROINK_WORK/speaker_info/{speaker_uuid}")
!rm -rf dummy_speaker_info

"""# モデルの作成のための環境構築1

モデル作成のための準備をします。このコードの実行には「15分」程度かかります。

ここのコードが早く完了しても、後の「モデルの学習スタート」のコードがすぐに終わらなければ問題ありません。

途中でERRORっぽい赤文字が表示されるかもしれませんが、後のコードでエラーにならなければ問題ありません。

**「セッションを再起動する」とダイアログが出る可能性がありますが、「キャンセル」を押してそのまま進めてください。**
"""

# Commented out IPython magic to ensure Python compatibility.
#@title 「モデルの作成のための環境構築1」のために左の再生ボタンをおしてください
!sudo apt-get update -y
!sudo apt-get install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev wget
!wget https://www.python.org/ftp/python/3.9.18/Python-3.9.18.tgz
!tar -xf Python-3.9.18.tgz
# %cd Python-3.9.18
!./configure --enable-optimizations
!sudo make altinstall
# %cd /content
!sudo update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.9 10
!curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
!python3 get-pip.py --force-reinstall
!python --version
!pip list

!pip install numpy==1.23.5
!pip install torch==1.10.2+cu113 torchvision==0.11.3+cu113 torchaudio===0.10.2+cu113 -f https://download.pytorch.org/whl/cu113/torch_stable.html
!git clone https://github.com/shirowanisan/espnet.git
!cd espnet; git checkout 0.10.3; git branch
!pip install Cython==0.29.32
!pip install pyopenjtalk==0.1.3 --no-build-isolation
!pip install pysptk==0.2.0 --no-build-isolation
!pip install -r espnet/requirements.txt
!git clone https://github.com/kaldi-asr/kaldi
!cd espnet/tools; ln -s $(pwd)/../../kaldi .
!mkdir -p espnet/tools/venv/bin && touch espnet/tools/venv/bin/activate

"""# モデルの作成のための環境構築2

ベースとする声を「model_1(つくよみちゃん音声モデル)」「model_2(おふとんPさん音声モデル)」「model_3(MANAさん音声モデル)」から選択できます。デフォルトは「model_2」としています。自分の声が「[model_1](https://coeiroink.com/character/audio-character/tsukuyomi-chan)」「[model_3](https://coeiroink.com/character/audio-character/mana)」と近いと思われる場合は、そちらを選択した方が良い結果が得られるかもしれません。
"""

# Commented out IPython magic to ensure Python compatibility.
#@title 「model_1~3」を選択して左の再生ボタンをおしてください

# %cd /content/
pretrained_model_tag = 'model_2' #@param ["model_1", "model_2", "model_3"] {type: "string"}

# Commented out IPython magic to ensure Python compatibility.
#@title 「モデルの作成のための環境構築2」のために左の再生ボタンをおしてください
import glob
espnet_wavs_dir = '/content/espnet/egs2/mycoe/tts1/downloads/wavs'
os.makedirs(espnet_wavs_dir, exist_ok=True)

wav_paths = sorted(glob.glob('/content/normalized_wavs/*.wav'))

for wav_path in wav_paths:
  shutil.copyfile(wav_path, espnet_wavs_dir + '/' + wav_path.split('/')[-1])

# %cd /content/
import shutil
if pretrained_model_tag == 'model_1':
  shutil.unpack_archive('/content/drive/MyDrive/MYCOEIROINK_WORK/downloads/mycoe_pretrain_model.zip', '/content/')
if pretrained_model_tag == 'model_2':
  shutil.unpack_archive('/content/drive/MyDrive/MYCOEIROINK_WORK/downloads/mycoe_pretrain_model_2.zip', '/content/')
if pretrained_model_tag == 'model_3':
  shutil.unpack_archive('/content/drive/MyDrive/MYCOEIROINK_WORK/downloads/mycoe_pretrain_model_3.zip', '/content/')

shutil.copyfile('/content/mycoe_pretrain_model/100epoch.pth', '/content/espnet/egs2/mycoe/tts1/downloads/100epoch.pth')
shutil.copyfile('/content/mycoe_pretrain_model/tokens.txt', '/content/espnet/egs2/mycoe/tts1/downloads/tokens.txt')
shutil.copyfile('/content/corpus/transcripts_utf8.txt', '/content/espnet/egs2/mycoe/tts1/downloads/transcripts_utf8.txt')

"""# モデルの作成のための環境構築3

モデル作成のための準備をします。少し時間がかかる場合があります。

ここのコードが早く完了しても、後の「モデルの学習スタート」のコードがすぐに終わらなければ問題ありません。
"""

# Commented out IPython magic to ensure Python compatibility.
#@title 「モデルの作成のための環境構築3」のために左の再生ボタンをおしてください
# %cd /content/espnet/egs2/mycoe/tts1/
!./run.sh \
    --stage 1 \
    --stop-stage 5 \
    --ngpu 1 \
    --fs 44100 \
    --n_fft 2048 \
    --n_shift 512 \
    --win_length null \
    --dumpdir dump/44k \
    --expdir /content/drive/MyDrive/MYCOEIROINK_WORK/exp \
    --tts_task gan_tts \
    --feats_extract linear_spectrogram \
    --feats_normalize none \
    --train_config ./conf/finetune.yaml
# %cd /content/
!mv /content/espnet/egs2/mycoe/tts1/dump/44k/token_list/phn_jaconv_pyopenjtalk_prosody/tokens.txt /content/espnet/egs2/mycoe/tts1/dump/44k/token_list/phn_jaconv_pyopenjtalk_prosody/tokens.bak.txt
!cp /content/espnet/egs2/mycoe/tts1/downloads/tokens.txt /content/espnet/egs2/mycoe/tts1/dump/44k/token_list/phn_jaconv_pyopenjtalk_prosody/tokens.txt

"""## モデルの学習スタート

ついにモデルを作成コードの実行です。このコードの実行は「終わらないもの」と考えてください。

Google colabと接続が切れるまで数時間実行し続けましょう。

モデル学習の途中経過は適宜、あなたのGoogle Driveの「MYCOEIROINK_WORK/exp」の中に保存されていますので、学習の途中でGoogle colabと接続が切れても問題ありません。

```
ここで学習がすぐに終わってしまう場合は、
アップロードした音声データに問題がある可能性があります。
以下をもう一度見直してください。

- モノラル
- 44.1kHz
- 16bit
- ファイル構造
- ファイル名
- 他に隠しファイルなどが含まれていないか
- 無音のファイルが含まれないか
```

また、学習の「**再開が失敗**」する場合はQ&Aの『音声モデルの学習を続きから行なった際に、「モデルの学習スタート」のところでエラーになったり、すぐに終了します』をご参照ください。
"""

# Commented out IPython magic to ensure Python compatibility.
#@title 「モデルの学習スタート」のために左の再生ボタンをおしてください
# %cd /content/espnet/egs2/mycoe/tts1/
!./run.sh \
    --stage 6 \
    --stop-stage 6 \
    --ngpu 1 \
    --fs 44100 \
    --n_fft 2048 \
    --n_shift 512 \
    --win_length null \
    --dumpdir dump/44k \
    --expdir /content/drive/MyDrive/MYCOEIROINK_WORK/exp \
    --tts_task gan_tts \
    --feats_extract linear_spectrogram \
    --feats_normalize none \
    --train_config ./conf/finetune.yaml \
    --train_args "--init_param downloads/100epoch.pth:tts:tts" \
    --tag mycoe_model
# %cd /content/

"""# モデルをCOEIROINKで動かすには？

## MYCOEIROINKのダウンロード

まず、Google Driveの「MYCOEIROINK_WORK/speaker_info」内の「数値と文字で構成されるフォルダ」をダウンロードしてください。

<img src="https://drive.google.com/uc?export=view&id=1bBYlIZa5DUK34Lt8sZjgGPe3lyT4j2qo" border="5" width=40%>

次に「MYCOEIROINK_WORK/exp/tts_mycoe_model」内の「xx.epoch」の「xx」が最大となるもの。「config.yaml」をダウンロードしてください。

<img src="https://drive.google.com/uc?export=view&id=16yzndWaOGWrsD9z5WIOVng2a8sYpOn3i" border="5" width=40%>

## MYCOEIROINKの準備

ダウロードした「数値と文字で構成されるフォルダ」内の「数値と文字で構成されるフォルダ/model/数値/」の下に「xx.epoch」と「config.yaml」を配置してください。

<img src="https://drive.google.com/uc?export=view&id=1wSoWD1PFS9lYy1FQQObz8Zgp9cHOgqd2" border="5" width=40%>

## MYCOEIROINKをCOEIROINKに組み込む

準備できた「数値と文字で構成されるフォルダ」をCOEIROINKソフトフェア本体の「COEIROINK-CPU-v.x.x.x/speaker_info」の中に配置しましょう。（COEIROINKのバージョンは1.1.0以上である必要があります。）

<img src="https://drive.google.com/uc?export=view&id=1gNKrSB59i82oaDPyReEZAk5MswBqWy1j" border="5" width=40%>

## COEIROINKの起動

COEIROINKを起動すると、あなたの「MYCOEIROINK」を動かすことができます。

※ MYCOEIROINKはCOEIROINK公式の音声モデルをベースとして作成されています。声質が自分のものに変わっていない場合は配布は行わないでください。

<img src="https://drive.google.com/uc?export=view&id=1RZttqOTLIalL4BG_R4QYzAgQpeyV-VdC" border="5" width=40%>

<img src="https://drive.google.com/uc?export=view&id=19B9W2M2YCbShvtvr38MIIvOl_d2NQLSL" border="5" width=40%>

## MYCOEIROINKのカスタマイズ

### 「画像・アイコン・サンプルボイス・名前」の変更

名前を変えずに以下のファイルを置き換えることで「画像・アイコン・サンプルボイス・名前」を変えることができます。

<img src="https://drive.google.com/uc?export=view&id=1pXnaxibz13NPTApGMQQGfTtrNlSDbz8I" border="5" width=40%>

「名前」を変えたい場合はmetas.jsonの以下を修正してください。

<img src="https://drive.google.com/uc?export=view&id=14ZBE1tNfgCcupPn_cdu4nuiRpMrE05AF" border="5" width=40%>

### スタイルの追加

画像のように「アイコン・サンプルボイス・モデル」を追加することで、スタイルを追加できます。数値は「もとあったデータの数値 + 1」に設定してください。

<img src="https://drive.google.com/uc?export=view&id=18RmCv0-291EIXz-wgCsBXar28WYBe8s-" border="5" width=40%>

metas.jsonも以下のように修正してください。

<img src="https://drive.google.com/uc?export=view&id=1hYHD3l-3ou72_aJvDGN8w0UhiW_aNU9O" border="5" width=40%>

## MYCOEIROINKの配布方法について

「数値と文字で構成されるフォルダ」をzip化して配布してください。ダウンロードした人が「COEIROINK-CPU-v.x.x.x/speaker_info」の中に配置することで実行できます。

# Q & A （一部開発者向け）

## コードの途中でエラーになったり、「モデルの学習スタート」のところでエラーになったり、すぐに終了します

アップロードした音声データに問題がある可能性があります。以下をもう一度見直してください。

- モノラル
- 44.1kHz
- 16bit
- ファイル構造
- ファイル名
- 他に隠しファイルなどが含まれていないか
- 無音のファイルが含まれないか

もしくは、google colabのセッションが一度切れてしまったにもかかわらず、「モデルの学習スタート」のみを実行してしまっている可能性があります。初回学習時、学習再開時はコードを「一番上のコード（Googleドライブのマウント）」から全部実行し直してください。

学習再開時は、セル全てにチェックがついていたとしても、もう一度「一番上のコード（Googleドライブのマウント）」から全部実行する必要があります。既に「MYCOEIROINK_WORK」フォルダに音声をアップロードしている場合は、もう一度音声をアップロードする必要はありません。

## 音声ファイルが正しいことを確認しましたが、途中でエラーになったり、動かなくなったりします

一度google colabのセッションを初期化みてください。

初期化方法：メニューバーより「ランタイム → ランタイムを接続解除して削除」

ランタイムを接続解除して削除ではデータは消えません。スマホで言うアプリの再起動のようなものです。ランタイムを接続解除して削除した後は、もう一度「一番上のコード（Googleドライブのマウント）」から全部実行する必要があります。既に「MYCOEIROINK_WORK」フォルダに音声をアップロードしている場合は、もう一度音声をアップロードする必要はありません。

それでも動かない場合は、MYCOEIROINKの初期化も行ってみてください。こちらを行った場合は、「MYCOEIROINK_WORK」フォルダのデータが全て消えてしまうため、ご注意ください。

初期化方法：Google Drive内の「MYCOEIROINK_WORK」フォルダを削除

##  「zip内の内容確認」でwavの数が424, 848と増えていきます。

一度google colabのセッションを初期化みてください。

初期化方法：メニューバーより「ランタイム → ランタイムを接続解除して削除」

それでも動かない場合は、MYCOEIROINKの初期化も行ってみてください。

初期化方法：Google Drive内の「MYCOEIROINK_WORK」フォルダを削除

## 音声の確認も、初期化もしたのに動きません

Google colabのアップデートの影響を受けて、このコードは動かなくなる可能性があります。

## MYCOEIROINKをCOEIROINKに追加すると、データ準備中で止まって起動しなくなる

「アイコン・サンプルボイス・モデル」はちゃんと入っていますか？
「metas.json」の修正は適切ですか？

「metas.json」に「,」を忘れたり、多くつけてしまう（最後は必要ない）場合が多いです。

また、とても低い確率で、MYCOEIROINK同士のspeaker_idが被ってしまう場合はあります。この場合は起動に失敗する可能性があります。

## 学習の進捗を知りたいです

画像のようにtrain.logを開いてください。

train.logの内容を更新するには、再度開き直す必要があります。

<img src="https://drive.google.com/uc?export=view&id=1_KvFAgWZprSIEPjfXQTyZ00sNQrTlukU" border="5" width=40%>

<img src="https://drive.google.com/uc?export=view&id=1ZdZwwk5BoLfIMAorpK-UyLWz0QNcVTDP" border="5" width=100%>

## 作ってみましたが、音声の品質がよくありません

生成された「xx.epoch」ファイルのxxですが、これはモデルを作るための学習の進み度合いを示しています。15epoch程度では、音声の品質が悪い可能性があります。しかし、google colabは12時間しか連続起動できないため、15epoch程度のモデルしか作れない問題があります。

## colabのセッションが切れたあとに、音声モデルを続きから学習できますか？

前の学習のセッションが切れた状態から「MYCOEIROINK_WORK/exp」の中身を特に修正せずにそのままの状態で、再度「一番上のコード（Googleドライブのマウント）」から全部実行し、「モデルの学習スタート」に到達することで、以前の学習の続きのepochから始めることができます。

学習再開時は、既に「MYCOEIROINK_WORK」フォルダに音声をアップロードしている場合、もう一度音声をアップロードする必要はありません。

## 音声モデルの学習を続きから行なった際に、「モデルの学習スタート」のところでエラーになったり、すぐに終了します

colabとのセッションが切れるタイミングによっては、前回の状態を正しく保存できていない場合があります。
「MYCOEIROINK_WORK/exp/tts_mycoe_model/checkpoint.pth」のバイトを確認してください。

<img src="https://drive.google.com/uc?export=view&id=15ANK4Q5wEEtu5vUrALbTHDlH0pmuj7eN" border="5" width=80%>

checkpoint.pthを一つ前のバージョンに戻すことで、復元することができます。

<img src="https://drive.google.com/uc?export=view&id=1pGDI6TFB1P1k9V94Y3EElG18-V9RXMEL" border="5" width=40%>

一つ前のバージョンをダウンロードします。

<img src="https://drive.google.com/uc?export=view&id=1yDVwjJtq7XLGoF0nFcXxmdS2H7FXQbmc" border="5" width=40%>

先ほどダウンロードしたcheckpoint.pthをアップロードします。

<img src="https://drive.google.com/uc?export=view&id=1mnY51jCDc_zEWo2ycxJYa9K_DDOEhc8r" border="5" width=40%>

checkpoint.pthの置き換えが完了しましたら、再度学習再開を試してみてください。

## 何epochくらいだと、良い品質になりますか？

まだ、MYCOEIROINKは実験段階で、私も確実なことは言えませんが50epochくらいから、良い品質になるのではと推測しています。

## このコードでは最大何epochまでまわせますか？

このコードでは、最大100epochまでとしています。

## Google Driveの容量のために最新epoch以外は削除した方がいいですか？

学習を続きから行いたい場合は、最新のepoch.pthとcheckpoint.pthは残しておく必要があります。

ただし、削除しなくても、最新10より前のepoch.pthは学習コード実行中に自動で削除されていきます。

## MYCOEIROINKを初期化したい

Google Drive内の「MYCOEIROINK_WORK」フォルダを削除してください。

## ITAコーパス、MANAコーパス以外の音声で学習させてもいいですか？

現状は、原則禁止です。

## COEIROINK上でMYCOEIROINKが上手く反応しない。MYCOEIROINKにスタイルを追加したのにCOEIROINK上に表示されない

COEIROINK内の設定を初期化することで改善する可能性があります
「%APPDATA%/voicevox-modified-by-shirowanisan/」フォルダを削除することで、COEIROINKの設定を初期化できます。

## 自分で作ったMYCOEIROINKを事前学習モデルとして、MYCOEIROINKを作ってもいいですか？

例外的に許可します。ただし「COEIROINK提供の事前学習モデル」「自分で作ったMYCOEIROINK」以外を事前学習モデルとして使うのは禁止です。

## どうすれば「自分で作ったMYCOEIROINK」を事前学習モデルとして指定できますか？

「モデルの学習スタート」内の以下のコードの`--train_args "--init_param downloads/100epoch.pth:tts:tts"`のパスを「自分で作ったMYCOEIROINK」のパスに変更することで指定できます。

```
#@title 「モデルの学習スタート」のために左の再生ボタンをおしてください
%cd /content/espnet/egs2/mycoe/tts1/
!./run.sh \
    --stage 6 \
    --stop-stage 6 \
    --ngpu 1 \
    --fs 44100 \
    --n_fft 2048 \
    --n_shift 512 \
    --win_length null \
    --dumpdir dump/44k \
    --expdir /content/drive/MyDrive/MYCOEIROINK_WORK/exp \
    --tts_task gan_tts \
    --feats_extract linear_spectrogram \
    --feats_normalize none \
    --train_config ./conf/finetune.yaml \
    --train_args "--init_param downloads/100epoch.pth:tts:tts" \
    --tag mycoe_model
%cd /content/
```

## COEIROINK提供の事前学習モデルだけを使って、コードは自前のものでGoogle colabではなくローカルで作りたいんですが、それは「MYCOEIROINK」として配布できますか？

問題ありません。ただし「COEIROINK提供の事前学習モデル」「自分で作ったMYCOEIROINK」以外を事前学習モデルとして使ったものを「MYCOEIROINK」として配布することは禁止です。
「COEIROINK提供・MYCOEIROINK以外のモデル」は、「COEIROINK」での起動を許可していません。

## MYCOEIROINKを即売会などで会場限定配布をしても大丈夫ですか？

無償配布であるならば、MYCOEIROINKの限定配布自体は規約上問題ありません。しかし、あなたが会場の主催者である場合は「MYCOEIROINK配布者が管理する有料商品を購入した方限定のような配布」として、有料配布とみなされる可能性があります。

## MYCOEIROINKを作成は原則自分の声とありますが、無生物音源でMYCOEIROINKを作っても大丈夫でしょうか？

あなたに権利のある音声ならば「sin波cos波の合成で作った音声」「楽器の音」「動物の鳴き声」などでMYCOEIROINKを作っても問題ありません。コーパス文をちゃんと読んでいない音声での学習も大丈夫です（コーパス文を「わんわんわんわん」で読むなど）。ただし、上手く合成音声化できる保証はありません。

また、以下はご遠慮ください。

- あなたに利用の権利のない音声の使用
    - 既存の合成音声ソフトウェアで出力した音声の場合は、利用規約に従うだけでなく、機械学習への使用が明示的に許可されていない場合は、音声提供者から明確な許諾を得て使用するようにしてください。
    - フリー素材のSE音声、ボイス音声を使用する場合は、使用の権利が明確であるか確認してください。また、できるだけ使用した素材のクレジット表記をするようにしてください。
- コーパスを無視して読み上げた文章で、他者の権利が明確な文章の読み上げ音声となっている場合

## 学習再開時にベースとなる声のモデルを変えるとどうなりますか？

学習の再開でベースの声モデルを変更しても効果はありません。「ベースの声モデル > 1epoch > (数字)epoch」と作られ、再開時はコードで指定したベースの声モデルに関係なく(数字)epochからの続きになります。1epochを作るときに使ったベースモデルのみが関係します。

# バージョン履歴

[2025-01-19: v.0.4.15]
- python3.9が優先されずpip installが失敗する不具合を修正

[2025-01-04: v.0.4.14]
- trimするときに0.1秒のバッファをとるように修正

[2024-06-17: v.0.4.13]
- numpyのバージョンを最初に固定するように修正

[2024-05-22: v.0.4.12]
- python3.9.18に固定するように修正

[2024-04-23: v.0.4.11]
- セッションの再起動をキャンセルするように案内を追加

[2024-03-10: v.0.4.10]
- ローカル学習に関する有志の方の記事を追加

[2024-01-22: v.0.4.9]
- 学習に関する有志の方の記事を追加

[2024-01-22: v.0.4.8]
- Q&A「MYCOEIROINKを作成は原則自分の声とありますが、無生物音源でMYCOEIROINKを作っても大丈夫でしょうか？」の文言を一部修正

[2023-08-24: v.0.4.7]
- Mycoeフォルダのportrait.pngの修正

[2023-07-18: v.0.4.6]
- Cythonのバージョンを指定するように修正

[2023-06-14: v.0.4.5]
- 音声の前処理の時に、wav開始終了の無音区間の削除を選択式に変更

[2023-06-14: v.0.4.4]
- 音声の前処理の時に、wav開始終了の無音区間を削除するように修正

[2023-05-25: v.0.4.3]
- Q&Aに学習が再開できないときの対処法を追記

[2023-05-25: v.0.4.2]
- 「文章の読み上げ時の注意点」に追記

[2023-04-28: v.0.4.1]
- python3.9を使用するように固定

[2023-04-11: v.0.4.0]
- espnetを0.10.3から202211にアップデート
- 依存ファイルをrequirements.txtで管理するように変更

[2023-03-22: v.0.3.8]
- coeiroink-corpus-managerの「Fix QUESTION2_043」を反映

[2023-03-19: v.0.3.7]
- Q&Aに「学習再開時にベースとなる声のモデルを変えるとどうなりますか？」を記載

[2023-03-19: v.0.3.6]
- 44.1kHzでない音声を入力したときは、注意書きを表示し、リサンプリングするように修正

[2023-03-18: v.0.3.5]
- typoを修正

[2023-03-18: v.0.3.4]
- 44.1kHzでない音声をリサンプリングしていたのをエラー表示するように修正

[2023-03-18: v.0.3.3]
- resampyがないことで動かなくなる問題を解消
- 音声ファイルの注意点を追加

[2023-03-15: v.0.3.2]
- typeguardのバージョンアップで動かなくなる問題の解消
- 途中のコードが早く完了しても問題ないことを記載

[2023-02-16: v.0.3.1]
- Q&Aに無生物音源に関する回答を記載

[2022-10-15: v.0.3.0]
- MANAコーパス対応
- ベースモデルにMANAさん音声モデル追加

[2022-10-15: v.0.2.1]
- Q&Aを修正

[2022-10-10: v.0.2.0]
- 最小10音声から学習可能に修正

[2022-10-10: v.0.1.9]
- 文章の読み上げ時の注意点

[2022-07-24: v.0.1.8]
- Q&Aの一部削除

[2022-07-24: v.0.1.7]
- Q&Aの追加

[2022-07-23: v.0.1.6]
- MYCOEIROINKの学習テスト用としてあみたろさんのITAコーパスを掲載

[2022-07-12: v.0.1.5]
- 学習が途中から再開できない不具合を修正
- Q&Aの追加

[2022-07-15: v.0.1.4]
- 学習が途中から再開できない不具合の記載

[2022-07-12: v.0.1.3]
- 有料配布に関する詳細を追記
- 学習がすぐに終了する際の注意点を追記

[2022-07-09: v.0.1.2]
- 準備ファイルのダウンロードパスの変更

[2022-04-09: v.0.1.1]
- 利用規約の他者の音声使用に関して追記

[2022-04-09: v.0.1.0]
- 事前学習モデルに男声を選択可能にする

[2022-04-09: v.0.0.8]
- スタイルの追加方法を追記

[2022-04-09: v.0.0.7]
- Q&Aの修正と追記

[2022-04-03: v.0.0.6]
- 必要なデータを「MYCOEIROINK_WORK」にダウンロードするように変更

[2022-04-03: v.0.0.5]
- speaker_infoが既に作られている場合は作成しないように変更

[2022-04-03: v.0.0.4]
- Q&Aに前回の学習の続きから始める方法を記載

[2022-04-02: v.0.0.3]
- 説明文を一部修正

[2022-04-02: v.0.0.2]
- 説明中の間違いを一部修正
- zip内のwavの検出部分を修正

[2022-04-02: v.0.0.1]
- 初回リリース

# 謝辞・クレジット

このコードで使用される事前学習モデルは、以下の方々の音声から作られております。

- VTuber「鹿仲茉菜」さんの音声データ
- フリー素材キャラクター「つくよみちゃん」運営の「夢前黎」さんの音声データ
- 「おふとんP」さんの音声データ

この方々のお力がなければ「COEIROINK・MYCOEIROINK」を実現することはできませんでした。この場をかりてお礼をさせてください。本当にありがとうございました。

(c) shirowanisan
"""